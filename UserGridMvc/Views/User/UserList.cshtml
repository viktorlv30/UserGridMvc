
@using GridMvc.Html
@using GridMvc.Sorting
@model IEnumerable<UserGridMvc.Models.UserModel>

@{
    ViewBag.Title = "UserList";
    Layout = "~/Views/User/Base.cshtml";
}
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

<h2>Users</h2>
@Html.ActionLink("Add New User", "Create", null, new { @class = "btn btn-success" })

@*@Html.Grid(Model).Columns(columns =>
    {
        columns.Add(x => x.FirstName)
            .Titled("First name")
            .Sortable(true)
            .SortInitialDirection(GridSortDirection.Ascending)
            .Filterable(true);
        columns.Add(x => x.LastName).Titled("Last name")
            .Sortable(true)
            .Filterable(true);
        columns.Add(x => x.Status)
            .Titled("Is deleted user")
            .Sortable(true);
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(x => @Html.ActionLink("Schedule", null, new { id = x.Id }, new { @class = "btn btn-success", @disabled = "disabled" }));
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(x => @Html.ActionLink("Update", "Edit", new { id = x.Id }, new { @class = "btn btn-primary" }));
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(30)
            .RenderValueAs(x => @Html.ActionLink("Change Status", "Edit", new { id = x.Id }, new { @class = "btn btn-danger" }));
    }).WithPaging(5)*@