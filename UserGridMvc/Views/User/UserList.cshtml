
@using GridMvc.Html
@using GridMvc.Sorting
@model IEnumerable<UserGridMvc.Models.UserModel>

@{
    ViewBag.Title = "UserList";
    Layout = "~/Views/User/Base.cshtml";
}
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>

<h2>Users</h2>

@Html.Grid(Model).Columns(columns =>
{
    columns.Add(x => x.Login)
        .Titled("Login")
        .Sortable(true)
        .SortInitialDirection(GridSortDirection.Ascending)
        .Filterable(true);
    columns.Add(x => x.Name).Titled("Full name")
        .Sortable(true)
        .Filterable(true);
    columns.Add(x => x.Email)
        .Titled("User email")
        .Sortable(true);
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(x => @Html.ActionLink("Add", "Create", new { Login = "" }, new { @class = "btn btn-success"/*, @disabled = "disabled"*/ }));
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(x => @Html.ActionLink("Edit", "Edit", new { id = x.Id }, new { @class = "btn btn-primary" }));
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(x => @Html.ActionLink("Delete", "Delete", new { id = x.Id }, new { @class = "btn btn-danger" }));
}).WithPaging(5)